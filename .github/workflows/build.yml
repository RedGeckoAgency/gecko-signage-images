name: Build & Release Gecko OS Images

on:
    push:
        tags:
            - "v*.*.*"
    workflow_dispatch:

permissions:
    contents: write

concurrency:
    group: gecko-os-${{ github.ref }}
    cancel-in-progress: false

jobs:
    build:
        name: Build ${{ matrix.arch }}
        runs-on: ubuntu-latest
        timeout-minutes: 360
        strategy:
            fail-fast: false
            matrix:
                include:
                    - arch: armhf
                      pigen_ref: 2025-05-13-raspios-bookworm-armhf
                    - arch: arm64
                      pigen_ref: 2025-05-13-raspios-bookworm-arm64

        steps:
            - name: Free disk space (optional but recommended)
              uses: jlumbroso/free-disk-space@main
              with:
                  tool-cache: true
                  android: true
                  dotnet: true
                  haskell: true
                  large-packages: true
                  docker-images: false
                  swap-storage: true

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: recursive
                  ssh-key: ${{ secrets.GECKO_DEPLOY_KEY }}
                  persist-credentials: false
                  ssh-strict: false
                  fetch-depth: 0

            - name: Set up dependencies
              run: |
                  sudo apt-get update -y
                  sudo apt-get install -y --no-install-recommends \
                    git rsync xz-utils bmap-tools qemu-user-static pigz dos2unix

            - name: Build image (${{ matrix.arch }})
              env:
                  ONLY_ARCH: ${{ matrix.arch }}
                  PIGEN_REF_ARMHF: ${{ matrix.arch == 'armhf' && matrix.pigen_ref || '' }}
                  PIGEN_REF_ARM64: ${{ matrix.arch == 'arm64' && matrix.pigen_ref || '' }}
              run: |
                  chmod +x scripts/build-local.sh
                  ./scripts/build-local.sh
                  echo "Built files:"
                  find out -maxdepth 2 -type f -printf "%P\t%k KB\n" | sort

            - name: Generate build manifest
              run: |
                  AGENT_SHA=$(git -C gecko rev-parse --short=12 HEAD || echo "no-submodule")
                  PIGEN_REF="${{ matrix.pigen_ref }}"
                  DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
                  mkdir -p out
                  {
                    echo "agent_sha=${AGENT_SHA}"
                    echo "pigen_ref=${PIGEN_REF}"
                    echo "arch=${{ matrix.arch }}"
                    echo "date_utc=${DATE}"
                    echo "git_tag=${GITHUB_REF_NAME}"
                  } > "out/BUILDINFO-${{ matrix.arch }}.txt"
                  cat "out/BUILDINFO-${{ matrix.arch }}.txt"

            - name: Checksums (per-arch)
              run: |
                  cd out
                  for d in armhf arm64; do
                    if [ -d "$d" ]; then
                      (cd "$d" && (sha256sum * > SHA256SUMS || shasum -a 256 * > SHA256SUMS) || true)
                    fi
                  done

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: out-${{ matrix.arch }}
                  path: |
                      out/${{ matrix.arch }}/**
                      out/BUILDINFO-${{ matrix.arch }}.txt
                  if-no-files-found: error
                  retention-days: 7

    release:
        name: Publish Release
        needs: [build]
        runs-on: ubuntu-latest
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v4
              with:
                  pattern: out-*
                  path: dist
                  merge-multiple: true

            - name: List artifacts
              run: |
                  echo "Downloaded files:"
                  find dist -type f -printf "%P\t%k KB\n" | sort

            - name: Create combined SHA256SUMS
              run: |
                  cd dist
                  { for f in armhf/SHA256SUMS arm64/SHA256SUMS; do
                      if [ -f "$f" ]; then
                        awk '{print}' "$f" | grep -E '  .*\.img(\.xz)?$' | sed "s#^#$(basename "$(dirname "$f")")/#";
                      fi
                    done; } > SHA256SUMS || true
                  ls -l

            - name: Create/Update GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  draft: false
                  prerelease: false
                  generate_release_notes: true
                  files: |
                      dist/armhf/*.img.xz
                      dist/arm64/*.img.xz
                      dist/SHA256SUMS
                      dist/BUILDINFO-*.txt
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
